# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-11-09 17:21+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: YAML Front Matter: komentoj_id
#: index.md:1
#, no-wrap
msgid "1"
msgstr ""

#. type: YAML Front Matter: lang
#: index.md:1
#, no-wrap
msgid "eo"
msgstr ""

#. type: YAML Front Matter: lang-niv
#: index.md:1
#, no-wrap
msgid "homa"
msgstr ""

#. type: YAML Front Matter: lang-ref
#: index.md:1
#, no-wrap
msgid "001-ĉefa-afero"
msgstr ""

#. type: YAML Front Matter: layout
#: index.md:1
#, no-wrap
msgid "page"
msgstr ""

#. type: YAML Front Matter: slug
#: index.md:1
#, no-wrap
msgid "La ĉefa afero!"
msgstr ""

#. type: YAML Front Matter: title
#: index.md:1
#, no-wrap
msgid "La ĉefa afero"
msgstr ""

#. type: Title #
#: index.md:11
#, no-wrap
msgid "[ _flash\\_cc2531_ ](https://github.com/jmichault/flash_cc2531)"
msgstr ""

#. type: Plain text
#: index.md:14
#, no-wrap
msgid ""
" [ _flash\\_cc2531_ ](https://github.com/jmichault/flash_cc2531) ebligas al vi programi vian CC2531 USB-bastonon de via _Raspberry_, sen la bezono de _Arduino_ aŭ a _CC Debugger_. \n"
"Ĝi ankaŭ povas programi CC2530-ŝlosilon. \n"
msgstr ""

#. type: Title ##
#: index.md:15
#, no-wrap
msgid "Antaŭkondiĉo"
msgstr ""

#. type: Plain text
#: index.md:16
#, no-wrap
msgid "Vi bezonas aŭ _Raspberry_ aŭ _Odroid-c2_.  \n"
msgstr ""

#. type: Plain text
#: index.md:18
#, no-wrap
msgid ""
"Vi bezonas kion por konekti la elpurigan havenon de la ŝlosilo al la havenoj _GPIO_ de _Raspberry_, ekzemple unu kablo _CC_ kaj kvar linioj _Dupont_ (vidu plu).   \n"
"[ _WiringPi_ ](http://wiringpi.com/) devas esti instalita \\(se ĝi ne estas antaŭinstalita, vi kutime povas instali ĝin per `sudo apt install wiringpi`), alie vidu [la retejon de _Gordon_ ](http://wiringpi.com/) aŭ [ĉi tiun alternativan retejon](https://github.com/WiringPi/WiringPi) \\).  \n"
msgstr ""

#. type: Plain text
#: index.md:20
#, no-wrap
msgid "Fine vi bezonas la programon:\n"
msgstr ""

#. type: Bullet: '* '
#: index.md:22
#, no-wrap
msgid "Enerale kunordiganto _zigbee_ : [ Versio 1.2 (rekomendita)](https://github.com/Koenkk/Z-Stack-firmware/raw/master/coordinator/Z-Stack_Home_1.2/bin/default/) aŭ [versio 3.0](https://github.com/Koenkk/Z-Stack-firmware/tree/master/coordinator/Z-Stack_3.0.x/bin)\n"
msgstr ""

#. type: Bullet: '* '
#: index.md:24
#, no-wrap
msgid "Aŭ enkursigilo _zigbee_ : [enkursigilo _zigbee_ 1.2](https://github.com/Koenkk/Z-Stack-firmware/tree/master/router/CC2531/bin)\n"
msgstr ""

#. type: Plain text
#: index.md:27
#, no-wrap
msgid "Mi projektis _flash\\_cc2531_ sur _Raspberry Pi 3_ kun _raspbian_, sed sukcesa programado estis raportita pri aliaj modeloj:\n"
msgstr ""

#. type: Bullet: ' * '
#: index.md:29
#, no-wrap
msgid "sur pi 4 vi bezonos version 2.52 de _wiringpi_ :  [instalu _wiringPi_ 2.52 de _Gordon_ ](http://wiringpi.com/wiringpi-updated-to-2-52-for-the-raspberry-pi-4b/)retejo\n"
msgstr ""

#. type: Bullet: ' * '
#: index.md:31
#, no-wrap
msgid "sur pi 1 kaj pi 2 vi bezonos [uzi aliajn pinglojn](#uzi_aliajn_pinglojn).\n"
msgstr ""

#. type: Title ##
#: index.md:33
#, no-wrap
msgid "Preparado"
msgstr ""

#. type: Plain text
#: index.md:36
#, no-wrap
msgid "Elŝutu _flash\\_cc2531_ al via _raspberry_ :\n"
msgstr ""

#. type: Fenced code block (bash)
#: index.md:36
#, no-wrap
msgid "git clone https://github.com/jmichault/flash_cc2531.git\n"
msgstr ""

#. type: Plain text
#: index.md:42
#, no-wrap
msgid ""
"Konektu la sekvajn pinglojn de la elpuriga haveno al la GPIO-haveno:\n"
"![](/public/raspberry-cc.png \"disposition _raspberry_ et _CC_\") \n"
msgstr ""

#. type: Plain text
#: index.md:49
#, no-wrap
msgid ""
"| pinglo de _GPIO_          | pinglo de _CC_  |\n"
"| ---------------------- | ------------ | \n"
"| 39 ( _GND_ )           | 1 ( _GND_ )  |\t\n"
"| 36 ( _wPi 27, BCM16_ ) | 3 ( _DC_ )   | \n"
"| 38 ( _wPi 28, BCM20_ ) | 4 ( _DD_ )   | \n"
"| 35 ( _wPi 24, BCM19_ ) | 7 ( _reset_ )| \n"
msgstr ""

#. type: Plain text
#: index.md:51
#, no-wrap
msgid "La pinglo-aranĝo de _raspberry_ haveblas ĉi tie: <https://pinout.xyz/>\n"
msgstr ""

#. type: Plain text
#: index.md:55
#, no-wrap
msgid ""
"Tiam enmetu la USB-ŝlosilon en havenon.   \n"
"Noto: Se vi ne volas enmeti la ŝlosilon en USB-havenon, vi povas anstataŭe konekti la pinglo _CC_ 9 al una pinglo _3,3v_ de _raspberry_ (pinglo 1 aŭ 17). \n"
msgstr ""

#. type: Plain text
#: index.md:59
#, no-wrap
msgid ""
"Elŝuti-kablo _CC_ kaj 4 linioj _Dupont_ Ino al Ino estas perfektaj por ĉi tiu celo:\n"
"![foto de la ŝlosilo kaj la _raspberry_ ](https://github.com/jmichault/files/raw/master/Raspberry-CC2531.jpg)\n"
"Ĉi tiu estas mia plej ŝatata opcio, sed se vi ne havas kablon _CC_ vi ankaŭ povas rekte luti la kablojn _Dupont_ sur la ŝlosilo: vidu ekzemple la retejon [ _lemariva.com_ ](https://lemariva.com/blog/2019/08/zigbee-flashing-cc2531-using-raspberry-pi-without-cc-debugger) aŭ [ _notenoughtech.com_ ](https://notenoughtech.com/home-automation/flashing-cc2531-without-cc-debugger )\n"
msgstr ""

#. type: Plain text
#: index.md:62
#, no-wrap
msgid "provu per ĉi tio:\n"
msgstr ""

#. type: Fenced code block (bash)
#: index.md:62
#, no-wrap
msgid ""
"cd flash_cc2531\n"
"./cc_chipid\n"
msgstr ""

#. type: Plain text
#: index.md:67
#, no-wrap
msgid "Ĝi devas reveni:\n"
msgstr ""

#. type: Fenced code block
#: index.md:67
#, no-wrap
msgid "  ID = b524.\n"
msgstr ""

#. type: Plain text
#: index.md:70
#, no-wrap
msgid "(la valoro povas esti malsama se la aparatara versio de via ŝlosilo ne samas kun la mia).  \n"
msgstr ""

#. type: Plain text
#: index.md:72
#, no-wrap
msgid "Se vi vidas 0000 aŭ ffff io estas malĝusta:\n"
msgstr ""

#. type: Bullet: ' * '
#: index.md:74
#, no-wrap
msgid "unue kontrolu vian kabligon.\n"
msgstr ""

#. type: Bullet: ' * '
#: index.md:76
#, no-wrap
msgid "tiam provu pli altan bazan tempon, ekzemple kun `./cc_chipid -m 100`, aŭ `./cc_chipid -m 160` aŭ `./cc_chipid -m 300`.\n"
msgstr ""

#. type: Bullet: ' * '
#: index.md:78
#, no-wrap
msgid "se neniu el tio funkcias, provu rekompili kun `make`.\n"
msgstr ""

#. type: Title ##
#: index.md:80
#, no-wrap
msgid "uzado"
msgstr ""

#. type: Plain text
#: index.md:82
#, no-wrap
msgid "Por konservi la enhavon de la fulmmemoro en la dosiero save.hex:\n"
msgstr ""

#. type: Fenced code block (bash)
#: index.md:82
#, no-wrap
msgid "./cc_read save.hex\n"
msgstr ""

#. type: Plain text
#: index.md:86
#, no-wrap
msgid "(prenas ĉirkaŭ 2 minutojn). \n"
msgstr ""

#. type: Plain text
#: index.md:88
#, no-wrap
msgid "Por forviŝi fulmmemoron:\n"
msgstr ""

#. type: Fenced code block (bash)
#: index.md:88
#, no-wrap
msgid "./cc_erase\n"
msgstr ""

#. type: Plain text
#: index.md:92
#, no-wrap
msgid "**Noto:** Vi **devas** forviŝi antaŭ skribado (krom se vi vere scias, kion vi faros).\n"
msgstr ""

#. type: Plain text
#: index.md:94
#, no-wrap
msgid "Por programi la dosieron _CC2531ZNP-Prod.hex_ sur la ŝlosilo _CC2531_:\n"
msgstr ""

#. type: Fenced code block (bash)
#: index.md:94
#, no-wrap
msgid "./cc_write CC2531ZNP-Prod.hex\n"
msgstr ""

#. type: Plain text
#: index.md:98
#, no-wrap
msgid "(daŭras ĉirkaŭ 3 minutojn).\n"
msgstr ""

#. type: Plain text
#: index.md:100
#, no-wrap
msgid "<a id=\"uzi_aliajn_pinglojn\"></a>\n"
msgstr ""

#. type: Title ##
#: index.md:100
#, no-wrap
msgid "Uzi aliajn pinglojn"
msgstr ""

#. type: Plain text
#: index.md:103
#, no-wrap
msgid "ĉiuj ordonoj akceptas la jenajn argumentojn:\n"
msgstr ""

#. type: Bullet: ' * '
#: index.md:105
#, no-wrap
msgid "_-c_ pinglo: ŝanĝu la pinglon _DC_ (defaŭlte 27)\n"
msgstr ""

#. type: Bullet: ' * '
#: index.md:107
#, no-wrap
msgid "_-d_ pinglo: ŝanĝu la pinglon _DD_ (defaŭlte 28)\n"
msgstr ""

#. type: Bullet: ' * '
#: index.md:109
#, no-wrap
msgid "_-r_ pinglo: ŝanĝu la pinglon _reset_ (defaŭlte 24)\n"
msgstr ""

#. type: Bullet: ' * '
#: index.md:111
#, no-wrap
msgid "_-m_ : ŝanĝu la prokrastan multiplikaton, kaj do la bazan tempon (defaŭlte: aŭtomata ĝustigo)\n"
msgstr ""

#. type: Plain text
#: index.md:114
#, no-wrap
msgid "la pinglonumerado uzata estas tiu de _wiringPi_. Uzu `gpio readall` por havi la aranĝon en via _Raspberry_ (kolumno _wPi_ ).\n"
msgstr ""

#. type: Plain text
#: index.md:115
#, no-wrap
msgid "Ekzemple, se vi volas uzi pinglojn 3, 11 kaj 13:  \n"
msgstr ""

#. type: Plain text
#: index.md:117
#, no-wrap
msgid "Konekti la jenajn pinglojn de elpuriga haveno al haveno _GPIO_:\n"
msgstr ""

#. type: Bullet: ' 1. '
#: index.md:119
#, no-wrap
msgid "pinglo 1 ( _GND_ ) -> pinglo 14 ( _GND_ )\n"
msgstr ""

#. type: Bullet: ' 2. '
#: index.md:121
#, no-wrap
msgid "pinglo 7 ( _reset_ ) -> pinglo 3 ( _wPi 8, BCM2_ )\n"
msgstr ""

#. type: Bullet: ' 3. '
#: index.md:123
#, no-wrap
msgid "pinglo 3 ( _DC_ ) -> pinglo 11 ( _wPi 0, BCM17_ )\n"
msgstr ""

#. type: Bullet: ' 4. '
#: index.md:125
#, no-wrap
msgid "pinglo 4 ( _DD_ ) -> pinglo 13 ( _wPi 2, BCM27_ )\n"
msgstr ""

#. type: Plain text
#: index.md:128
#, no-wrap
msgid "kaj nun vi povas legi identigilon, konservi, forviŝi kaj skribi fulmmemoron per la jenaj komandoj:\n"
msgstr ""

#. type: Fenced code block (bash)
#: index.md:128
#, no-wrap
msgid ""
"./cc_chipid -r 8 -c 0 -d 2\n"
"./cc_read -r 8 -c 0 -d 2 save.hex\n"
"./cc_erase -r 8 -c 0 -d 2\n"
"./cc_write -r 8 -c 0 -d 2 CC2531ZNP-Prod.hex\n"
msgstr ""

#. type: Plain text
#: index.md:136
#, no-wrap
msgid "Vi ankaŭ povas ŝanĝi la defaŭltajn valorojn en _CCDebugger.h_ kaj kompili la programojn per `make`.\n"
msgstr ""

#. type: Title ##
#: index.md:137
#, no-wrap
msgid "kio se ĝi ne funkcias?"
msgstr ""

#. type: Bullet: '1. '
#: index.md:140
#, no-wrap
msgid "ĉesu ĉiujn aliajn programojn.\n"
msgstr ""

#. type: Bullet: '2. '
#: index.md:142
#, no-wrap
msgid "agordu la rapidon de la procesoro antaŭ programado. Ekzemplo:\n"
msgstr ""

#. type: Fenced code block (bash)
#: index.md:144
#, no-wrap
msgid "   sudo echo performance >/sys/devices/system/cpu/cpu0/cpufreq/scaling_governor\n"
msgstr ""

#. type: Bullet: '3. '
#: index.md:148
#, no-wrap
msgid "uzu la opcion -m por pliigi la uzatajn tempolimojn. Ekzemplo:\n"
msgstr ""

#. type: Fenced code block (bash)
#: index.md:150
#, no-wrap
msgid "   ./cc_write -m 300 CC2531ZNP-Prod.hex\n"
msgstr ""

#. type: Bullet: '4. '
#: index.md:154
#, no-wrap
msgid "rekompili la programon per `make`.\n"
msgstr ""

#. type: Bullet: '5. '
#: index.md:157
#, no-wrap
msgid "serĉu solvon [en la demandoj jam faritaj ĉe github](https://github.com/jmichault/flash_cc2531/issues?q=is%3Aissue)\n"
msgstr ""

#. type: Bullet: '6. '
#: index.md:160
#, no-wrap
msgid "Demandu vian propran demandon pri [github](https://github.com/jmichault/flash_cc2531/issues/new/choose).\n"
msgstr ""

#. type: Bullet: '1. '
#: index.md:163 index.md:180
#, no-wrap
msgid "Kontrolu vian nutroblokon\n"
msgstr ""

#. type: Fenced code block (bash)
#: index.md:165 index.md:182
#, no-wrap
msgid "   grep Under /var/log/kern.log\n"
msgstr ""

#. type: Plain text
#: index.md:169 index.md:186
#, no-wrap
msgid "Se vi ricevas multajn liniojn, tiam vi devas ŝanĝi nutroblokon. \n"
msgstr ""

#. type: Title ##
#: index.md:170
#, no-wrap
msgid "Mi volas konekti pli ol 15 periferiojn"
msgstr ""

#. type: Plain text
#: index.md:172
#, no-wrap
msgid ""
"Ni legas en diversaj lokoj, kiujn la ŝlosilo _CC2531_ nur povas pritrakti 15 maksimumajn aparatojn.   \n"
"Fakte la normo firmware de ĉi tiu ŝlosilo havas limon de 15 rektaj ligoj. Sed se unu el ĉi tiuj konektoj estas _zigbee_ enkursigilo (kaj plej multaj aparatoj funkcias kiel enkursigilo, tio estas ekzemple la kazo de _Philips Hue_ ampoloj kaj _Ikea TRÅDFRI_ ampoloj), tiam la _CC2531_ povas administri la aparatojn malantaŭ ĉi tiu enkursigilo, kaj tiujn malantaŭ la enkursigiloj konektitaj al ĉi tiu enkursigilo ...  \n"
msgstr ""

#. type: Plain text
#: index.md:173
#, no-wrap
msgid "Fakte la limo por la _CC2531_ estas multe pli alta. Kaj se iutage vi superas pli ol 50 aparatojn en via _zigbee_ reto, investi en pli multekosta kunordiganto estos nur malgranda parto de via buĝeto.  \n"
msgstr ""

#. type: Plain text
#: index.md:175
#, no-wrap
msgid "Ankaŭ notu, ke la protokolo _zigbee_ limigas la nombron de rektaj ligoj al 32-a. Sendepende de via kunordiganto _zigbee_, ĝi ne povos konektiĝi al pli ol 32 ekstercentraj. \n"
msgstr ""

#. type: Title ##
#: index.md:176
#, no-wrap
msgid "Mia ŝlosilo havas ĝian ruĝan LED, kiu lumigas."
msgstr ""

#. type: Plain text
#: index.md:178
#, no-wrap
msgid "Okazas, ke la ŝlosilo deprogramos, ĉu pro medio ŝarĝita de parazitoj aŭ pro malbona nutrobloko. \n"
msgstr ""

#. type: Bullet: '2. '
#: index.md:188
#, no-wrap
msgid "Malproksimigu la ŝlosilo de perturbaj materialoj: laŭtparoliloj, Wi-Fi enkursigiloj, ...\n"
msgstr ""

#. type: Bullet: '3. '
#: index.md:191
#, no-wrap
msgid "Reprogramu la ŝlosilon\n"
msgstr ""

#. type: Title ##
#: index.md:195
#, no-wrap
msgid "Permesilo"
msgstr ""

#. type: Plain text
#: index.md:197
#, no-wrap
msgid "Ĉi tiu projekto estas rajtigita laŭ GPL v3 ( vidu _COPYING_ ).\n"
msgstr ""
