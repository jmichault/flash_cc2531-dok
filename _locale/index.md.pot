# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-01-25 18:54+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: YAML Front Matter: lang
#: index.md:1
#, no-wrap
msgid "eo"
msgstr ""

#. type: YAML Front Matter: lang-niv
#: index.md:1
#, no-wrap
msgid "homa"
msgstr ""

#. type: YAML Front Matter: lang-ref
#: index.md:1
#, no-wrap
msgid "001-ĉefa-afero"
msgstr ""

#. type: YAML Front Matter: layout
#: index.md:1
#, no-wrap
msgid "page"
msgstr ""

#. type: YAML Front Matter: slug
#: index.md:1
#, no-wrap
msgid "La esenca!"
msgstr ""

#. type: YAML Front Matter: title
#: index.md:1
#, no-wrap
msgid "La ĉefa afero"
msgstr ""

#. type: Title #
#: index.md:10
#, no-wrap
msgid "[ _flash\\_cc2531_ ](https://github.com/jmichault/flash_cc2531)"
msgstr ""

#. type: Plain text
#: index.md:12
#, no-wrap
msgid " [ _flash\\_cc2531_ ](https://github.com/jmichault/flash_cc2531) permesas programi vian CC2531 USB-ŝlosilon de via _Raspberry_, sen bezono de _Arduino_ aŭ _CC Debugger_.\n"
msgstr ""

#. type: Title ##
#: index.md:13
#, no-wrap
msgid "Antaŭkondiĉo"
msgstr ""

#. type: Plain text
#: index.md:14
#, no-wrap
msgid "Vi bezonas aŭ _Raspberry_ aŭ _Odroid-c2_.  \n"
msgstr ""

#. type: Plain text
#: index.md:16
#, no-wrap
msgid ""
"Vi bezonas kion por konekti la elpurigan havenon de la ŝlosilo al la havenoj _GPIO_ de _Raspberry_, ekzemple unu kablo _CC_ kaj kvar linioj _Dupont_ (vidu plu).   \n"
"[ _WiringPi_ ](http://wiringpi.com/) devas esti instalita \\(se ĝi ne estas antaŭinstalita, vi kutime povas instali ĝin per `sudo apt install wiringpi`), alie vidu [la retejon de _Gordon_ ](http://wiringpi.com/) aŭ [ĉi tiun alternativan retejon](https://github.com/WiringPi/WiringPi) \\).  \n"
msgstr ""

#. type: Plain text
#: index.md:18
#, no-wrap
msgid "Fine vi bezonas la programon:\n"
msgstr ""

#. type: Bullet: '* '
#: index.md:20
#, no-wrap
msgid "ĝenerale zigbee-kunordiganto: [ versio 1.2 (rekomendita)](https://github.com/Koenkk/Z-Stack-firmware/raw/master/coordinator/Z-Stack_Home_1.2/bin/default/) aŭ [versio 3.0](https://github.com/Koenkk/Z-Stack-firmware/tree/master/coordinator/Z-Stack_3.0.x/bin)\n"
msgstr ""

#. type: Bullet: '* '
#: index.md:22
#, no-wrap
msgid "aŭ zigbee-enkursigilo: [zigbee-enkursigilo 1.2](https://github.com/Koenkk/Z-Stack-firmware/tree/master/router/CC2531/bin)\n"
msgstr ""

#. type: Plain text
#: index.md:25
#, no-wrap
msgid "Mi projektis _flash\\_cc2531_ sur _Raspberry Pi 3_ kun _raspbian_, sed sukcesa programado estis raportita pri aliaj modeloj:\n"
msgstr ""

#. type: Bullet: ' * '
#: index.md:27
#, no-wrap
msgid "sur pi 4 vi bezonos version 2.52 de _wiringpi_ :  [instalu _wiringPi_ 2.52 de _Gordon_ ](http://wiringpi.com/wiringpi-updated-to-2-52-for-the-raspberry-pi-4b/)retejo\n"
msgstr ""

#. type: Bullet: ' * '
#: index.md:29
#, no-wrap
msgid "sur pi 1 kaj pi 2 vi bezonos [uzi aliajn pinglojn](#uzi_aliajn_pinglojn).\n"
msgstr ""

#. type: Bullet: ' * '
#: index.md:31
#, no-wrap
msgid "ĉiuokaze vi probable bezonos agordi la tempan bazan opcion ( _\"-m\"_ ).\n"
msgstr ""

#. type: Title ##
#: index.md:33
#, no-wrap
msgid "Preparado"
msgstr ""

#. type: Plain text
#: index.md:36
#, no-wrap
msgid "Elŝutu _flash\\_cc2531_ al via _raspberry_ :\n"
msgstr ""

#. type: Fenced code block (bash)
#: index.md:36
#, no-wrap
msgid "git clone https://github.com/jmichault/flash_cc2531.git\n"
msgstr ""

#. type: Plain text
#: index.md:41
#, no-wrap
msgid "Konektu la jenajn pinglojn de la debug-haveno al la GPIO-haveno:\n"
msgstr ""

#. type: Bullet: ' 1. '
#: index.md:43
#, no-wrap
msgid "pinglo 1 ( _GND_ ) -> pinglo 39 ( _GND_ )\n"
msgstr ""

#. type: Bullet: ' 2. '
#: index.md:45
#, no-wrap
msgid "pinglo 7 ( _reset_ ) -> pinglo 35 ( _wPi 24, BCM19_ )\n"
msgstr ""

#. type: Bullet: ' 3. '
#: index.md:47
#, no-wrap
msgid "pinglo 3 ( _DC_ ) -> pinglo 36 ( _wPi 27, BCM16_ )\n"
msgstr ""

#. type: Bullet: ' 4. '
#: index.md:49
#, no-wrap
msgid "pinglo 4 ( _DD_ ) -> pinglo 38 ( _wPi 28, BCM20_ )\n"
msgstr ""

#. type: Plain text
#: index.md:52
#, no-wrap
msgid "La pinglo-aranĝo de _raspberry_ haveblas ĉi tie: <https://pinout.xyz/>\n"
msgstr ""

#. type: Plain text
#: index.md:54
#, no-wrap
msgid "kaj enmetu la USB-ŝlosilon en havenon.\n"
msgstr ""

#. type: Plain text
#: index.md:58
#, no-wrap
msgid ""
"Elŝuta kablo _CC_ kaj 4 linioj _Dupont_ Ino al Ino estas perfektaj por ĉi tiu celo:\n"
"![foto de la ŝlosilo kaj la _raspberry_ ](https://github.com/jmichault/files/raw/master/Raspberry-CC2531.jpg)\n"
"Ĉi tiu estas mia plej ŝatata opcio, sed se vi ne havas kablon _CC_ vi ankaŭ povas rekte luti la kablojn _Dupont_ sur la ŝlosilo: vidu ekzemple la retejon [ _lemariva.com_ ](https://lemariva.com/blog/2019/08/zigbee-flashing-cc2531-using-raspberry-pi-without-cc-debugger) aŭ [ _notenoughtech.com_ ](https://notenoughtech.com/home-automation/flashing-cc2531-without-cc-debugger )\n"
msgstr ""

#. type: Plain text
#: index.md:61
#, no-wrap
msgid "provu per ĉi tio:\n"
msgstr ""

#. type: Fenced code block (bash)
#: index.md:61
#, no-wrap
msgid ""
"cd flash_cc2531\n"
"./cc_chipid\n"
msgstr ""

#. type: Plain text
#: index.md:66
#, no-wrap
msgid "Ĝi devas reveni:\n"
msgstr ""

#. type: Fenced code block
#: index.md:66
#, no-wrap
msgid "  ID = b524.\n"
msgstr ""

#. type: Plain text
#: index.md:69
#, no-wrap
msgid "(la valoro povas esti malsama se la aparatara versio de via ŝlosilo ne samas kun la mia).  \n"
msgstr ""

#. type: Plain text
#: index.md:71
#, no-wrap
msgid "Se vi vidas 0000 aŭ ffff io fiaskas:\n"
msgstr ""

#. type: Bullet: ' * '
#: index.md:73
#, no-wrap
msgid "unue kontrolu vian kabligon.\n"
msgstr ""

#. type: Bullet: ' * '
#: index.md:75
#, no-wrap
msgid "tiam provu pli altan bazan tempon, ekzemple kun `./cc_chipid -m 100`, aŭ `./cc_chipid -m 160` aŭ `./cc_chipid -m 300`.\n"
msgstr ""

#. type: Bullet: ' * '
#: index.md:77
#, no-wrap
msgid "se neniu el tio funkcias, provu rekompili kun `make`.\n"
msgstr ""

#. type: Title ##
#: index.md:79
#, no-wrap
msgid "uzado"
msgstr ""

#. type: Plain text
#: index.md:81
#, no-wrap
msgid "Por konservi la enhavon de la fulmmemoro en la dosiero save.hex:\n"
msgstr ""

#. type: Fenced code block (bash)
#: index.md:81
#, no-wrap
msgid "./cc_read save.hex\n"
msgstr ""

#. type: Plain text
#: index.md:85
#, no-wrap
msgid "(daŭras ĉirkaŭ 1 minuton).\n"
msgstr ""

#. type: Plain text
#: index.md:87
#, no-wrap
msgid "Por viŝi fulmmemoron:\n"
msgstr ""

#. type: Fenced code block (bash)
#: index.md:87
#, no-wrap
msgid "./cc_erase\n"
msgstr ""

#. type: Plain text
#: index.md:91
#, no-wrap
msgid "**Noto:** Vi **devas** forviŝi antaŭ skribado (krom se vi vere scias, kion vi faros).\n"
msgstr ""

#. type: Plain text
#: index.md:93
#, no-wrap
msgid "Por programi la dosieron _CC2531ZNP-Prod.hex_ sur la klavo _CC2531_:\n"
msgstr ""

#. type: Fenced code block (bash)
#: index.md:93
#, no-wrap
msgid "./cc_write CC2531ZNP-Prod.hex\n"
msgstr ""

#. type: Plain text
#: index.md:97
#, no-wrap
msgid "(daŭras ĉirkaŭ 3 minutojn).\n"
msgstr ""

#. type: Plain text
#: index.md:99
#, no-wrap
msgid "<a id=\"uzi_aliajn_pinglojn\"></a>\n"
msgstr ""

#. type: Title ##
#: index.md:99
#, no-wrap
msgid "Uzi aliajn pinglojn"
msgstr ""

#. type: Plain text
#: index.md:102
#, no-wrap
msgid "ĉiuj ordonoj akceptas la jenajn argumentojn:\n"
msgstr ""

#. type: Bullet: ' * '
#: index.md:104
#, no-wrap
msgid "_-c_ pinglo: ŝanĝu la pinglon _DC_ (defaŭlte 27)\n"
msgstr ""

#. type: Bullet: ' * '
#: index.md:106
#, no-wrap
msgid "_-d_ pinglo: ŝanĝu la pinglon _DD_ (defaŭlte 28)\n"
msgstr ""

#. type: Bullet: ' * '
#: index.md:108
#, no-wrap
msgid "_-r_ pinglo: ŝanĝu la pinglon _reset_ (defaŭlte 24)\n"
msgstr ""

#. type: Bullet: ' * '
#: index.md:110
#, no-wrap
msgid "_-m_ : ŝanĝu la prokrastan multiplikaton, kaj do la bazan tempon (defaŭlte: aŭtomata ĝustigo)\n"
msgstr ""

#. type: Plain text
#: index.md:113
#, no-wrap
msgid "la pinglonumerado uzata estas tiu de _wiringPi_. Uzu `gpio readall` por havi la aranĝon en via _Raspberry_ (kolumno _wPi_ ).\n"
msgstr ""

#. type: Plain text
#: index.md:114
#, no-wrap
msgid "Ekzemple, se vi volas uzi pinglojn 3, 11 kaj 13:  \n"
msgstr ""

#. type: Plain text
#: index.md:116
#, no-wrap
msgid "Konekti la jenajn pinglojn de elpuriga haveno al pordo _GPIO_:\n"
msgstr ""

#. type: Bullet: ' 1. '
#: index.md:118
#, no-wrap
msgid "pinglo 1 ( _GND_ ) -> pinglo 14 ( _GND_ )\n"
msgstr ""

#. type: Bullet: ' 2. '
#: index.md:120
#, no-wrap
msgid "pinglo 7 ( _reset_ ) -> pinglo 3 ( _wPi 8, BCM2_ )\n"
msgstr ""

#. type: Bullet: ' 3. '
#: index.md:122
#, no-wrap
msgid "pinglo 3 ( _DC_ ) -> pinglo 11 ( _wPi 0, BCM17_ )\n"
msgstr ""

#. type: Bullet: ' 4. '
#: index.md:124
#, no-wrap
msgid "pinglo 4 ( _DD_ ) -> pinglo 13 ( _wPi 2, BCM27_ )\n"
msgstr ""

#. type: Plain text
#: index.md:127
#, no-wrap
msgid "kaj nun vi povas legi identigilon, konservi, forigi kaj skribi fulmmemoron per la jenaj komandoj:\n"
msgstr ""

#. type: Fenced code block (bash)
#: index.md:127
#, no-wrap
msgid ""
"./cc_chipid -r 8 -c 0 -d 2\n"
"./cc_read -r 8 -c 0 -d 2 save.hex\n"
"./cc_erase -r 8 -c 0 -d 2\n"
"./cc_write -r 8 -c 0 -d 2 CC2531ZNP-Prod.hex\n"
msgstr ""

#. type: Plain text
#: index.md:135
#, no-wrap
msgid "Vi ankaŭ povas ŝanĝi la defaŭltajn valorojn en _CCDebugger.h_ kaj kompili la programojn per `make`.\n"
msgstr ""

#. type: Title ##
#: index.md:136
#, no-wrap
msgid "kio se ĝi ne funkcias?"
msgstr ""

#. type: Bullet: '1. '
#: index.md:139
#, no-wrap
msgid "ĉesu ĉiujn aliajn programojn.\n"
msgstr ""

#. type: Bullet: '2. '
#: index.md:141
#, no-wrap
msgid "agordu la rapidon de la procesoro antaŭ programado. Ekzemplo:\n"
msgstr ""

#. type: Fenced code block (bash)
#: index.md:143
#, no-wrap
msgid "   sudo echo performance >/sys/devices/system/cpu/cpu0/cpufreq/scaling_governor\n"
msgstr ""

#. type: Bullet: '3. '
#: index.md:147
#, no-wrap
msgid "uzu la opcion -m por pliigi la uzatajn tempolimojn. Ekzemplo:\n"
msgstr ""

#. type: Fenced code block (bash)
#: index.md:149
#, no-wrap
msgid "   ./cc_write -m 300 CC2531ZNP-Prod.hex\n"
msgstr ""

#. type: Bullet: '4. '
#: index.md:153
#, no-wrap
msgid "rekompili la programon per `make`.\n"
msgstr ""

#. type: Bullet: '5. '
#: index.md:156
#, no-wrap
msgid "serĉu solvon [en la demandoj jam faritaj ĉe github](https://github.com/jmichault/flash_cc2531/issues?q=is%3Aissue)\n"
msgstr ""

#. type: Bullet: '6. '
#: index.md:159
#, no-wrap
msgid "Demandu vian propran demandon pri [github](https://github.com/jmichault/flash_cc2531/issues/new/choose).\n"
msgstr ""

#. type: Title ##
#: index.md:161
#, no-wrap
msgid "Permesilo"
msgstr ""

#. type: Plain text
#: index.md:163
#, no-wrap
msgid "Ĉi tiu projekto estas rajtigita laŭ GPL v3 ( vidu _COPYING_ ).\n"
msgstr ""
